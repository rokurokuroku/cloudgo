<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.roku.cloudgo.DAO.mapper.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.roku.cloudgo.pojo.Order" >
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="buyer_id" property="buyerId" jdbcType="INTEGER" />
    <result column="seller_id" property="sellerId" jdbcType="INTEGER" />
    <result column="product_id" property="productId" jdbcType="INTEGER" />
    <result column="product_numbers" property="productNumbers" jdbcType="INTEGER" />
    <result column="trading_hour" property="tradingHour" jdbcType="DATE" />
    <result column="shipping_address" property="shippingAddress" jdbcType="VARCHAR" />
    <result column="transaction_amount" property="transactionAmount" jdbcType="REAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    order_id, buyer_id, seller_id, product_id, product_numbers, trading_hour, shipping_address, 
    transaction_amount
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.roku.cloudgo.pojo.OrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.roku.cloudgo.pojo.OrderExample" >
    delete from Orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.roku.cloudgo.pojo.Order" >
    insert into Orders (order_id, buyer_id, seller_id, 
      product_id, product_numbers, trading_hour, 
      shipping_address, transaction_amount)
    values (#{orderId,jdbcType=INTEGER}, #{buyerId,jdbcType=INTEGER}, #{sellerId,jdbcType=INTEGER}, 
      #{productId,jdbcType=INTEGER}, #{productNumbers,jdbcType=INTEGER}, #{tradingHour,jdbcType=DATE}, 
      #{shippingAddress,jdbcType=VARCHAR}, #{transactionAmount,jdbcType=REAL})
  </insert>
  <insert id="insertSelective" parameterType="com.roku.cloudgo.pojo.Order" >
    insert into Orders
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="buyerId != null" >
        buyer_id,
      </if>
      <if test="sellerId != null" >
        seller_id,
      </if>
      <if test="productId != null" >
        product_id,
      </if>
      <if test="productNumbers != null" >
        product_numbers,
      </if>
      <if test="tradingHour != null" >
        trading_hour,
      </if>
      <if test="shippingAddress != null" >
        shipping_address,
      </if>
      <if test="transactionAmount != null" >
        transaction_amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="buyerId != null" >
        #{buyerId,jdbcType=INTEGER},
      </if>
      <if test="sellerId != null" >
        #{sellerId,jdbcType=INTEGER},
      </if>
      <if test="productId != null" >
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="productNumbers != null" >
        #{productNumbers,jdbcType=INTEGER},
      </if>
      <if test="tradingHour != null" >
        #{tradingHour,jdbcType=DATE},
      </if>
      <if test="shippingAddress != null" >
        #{shippingAddress,jdbcType=VARCHAR},
      </if>
      <if test="transactionAmount != null" >
        #{transactionAmount,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.roku.cloudgo.pojo.OrderExample" resultType="java.lang.Integer" >
    select count(*) from Orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update Orders
    <set >
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.buyerId != null" >
        buyer_id = #{record.buyerId,jdbcType=INTEGER},
      </if>
      <if test="record.sellerId != null" >
        seller_id = #{record.sellerId,jdbcType=INTEGER},
      </if>
      <if test="record.productId != null" >
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.productNumbers != null" >
        product_numbers = #{record.productNumbers,jdbcType=INTEGER},
      </if>
      <if test="record.tradingHour != null" >
        trading_hour = #{record.tradingHour,jdbcType=DATE},
      </if>
      <if test="record.shippingAddress != null" >
        shipping_address = #{record.shippingAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.transactionAmount != null" >
        transaction_amount = #{record.transactionAmount,jdbcType=REAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update Orders
    set order_id = #{record.orderId,jdbcType=INTEGER},
      buyer_id = #{record.buyerId,jdbcType=INTEGER},
      seller_id = #{record.sellerId,jdbcType=INTEGER},
      product_id = #{record.productId,jdbcType=INTEGER},
      product_numbers = #{record.productNumbers,jdbcType=INTEGER},
      trading_hour = #{record.tradingHour,jdbcType=DATE},
      shipping_address = #{record.shippingAddress,jdbcType=VARCHAR},
      transaction_amount = #{record.transactionAmount,jdbcType=REAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>